name: Android F-Droid Release Build

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:

jobs:
  build-release:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 36
          build-tools: 36.0.0

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Build F-Droid Release
        run: ./gradlew assembleFdroidRelease --stacktrace

      - name: Extract version name
        id: version
        run: |
          VERSION=$(grep versionName app/build.gradle | head -1 | sed 's/.*versionName *= *"\(.*\)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload APKs
        run: |
          APK_DIR=app/build/outputs/apk/fdroid/release
          for apk in $APK_DIR/*.apk; do
            filename=$(basename "$apk")
            if [[ "$filename" == *"universal"* ]]; then
              ABI="universal"
            else
              ABI=$(echo "$filename" | sed -E 's/.*-([a-z0-9_]+)\.apk/\1/')
            fi
            echo "Found APK: $apk with ABI: $ABI"
            # Copy to a standardized name for upload
            cp "$apk" "QuestPhone-${{ steps.version.outputs.version }}-$ABI.apk"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: QuestPhone-APKs-${{ steps.version.outputs.version }}
          path: QuestPhone-*.apk
